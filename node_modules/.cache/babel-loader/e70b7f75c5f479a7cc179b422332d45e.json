{"ast":null,"code":"import _defineProperty from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/AddComment.js\";\nimport React, { Component } from 'react';\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddComment, _Component);\n\n  function AddComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: _this.props.user.username,\n      body: '',\n      articleid: _this.props.articleid\n    };\n\n    _this.handleChange = function (event) {\n      var id = event.target.id;\n\n      _this.setState(_defineProperty({}, id, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.addComment();\n\n      _this.setState({\n        body: ''\n      });\n    };\n\n    _this.addComment = function () {\n      var articleid = _this.state.articleid;\n      return fetch(\"https://lloyd-news.herokuapp.com/api/articles/\".concat(articleid, \"/comments\"), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          body: _this.state.body,\n          username: _this.props.username\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (_ref) {\n        var comment = _ref.comment;\n\n        _this.props.getComment(comment);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"commenting as:\", user.username, \" \"), React.createElement(\"label\", {\n        htmlFor: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"body\",\n        onChange: this.handleChange,\n        value: this.state.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Add Comment\")));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nexport default AddComment;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/AddComment.js"],"names":["React","Component","AddComment","state","username","props","user","body","articleid","handleChange","event","id","target","setState","value","handleSubmit","preventDefault","addComment","fetch","method","headers","Accept","JSON","stringify","then","res","json","comment","getComment"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBF,QADpB;AAENG,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,SAAS,EAAE,MAAKH,KAAL,CAAWG;AAHhB,K;;UAoBRC,Y,GAAe,UAAAC,KAAK,EAAI;AAAA,UACdC,EADc,GACPD,KAAK,CAACE,MADC,CACdD,EADc;;AAEtB,YAAKE,QAAL,qBACGF,EADH,EACQD,KAAK,CAACE,MAAN,CAAaE,KADrB;AAGD,K;;UAGCC,Y,GAAe,UAACL,KAAD,EAAW;AACtBA,MAAAA,KAAK,CAACM,cAAN;;AACA,YAAKC,UAAL;;AACA,YAAKJ,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,K;;UAEHU,U,GAAa,YAAM;AAAA,UACTT,SADS,GACK,MAAKL,KADV,CACTK,SADS;AAEjB,aAAOU,KAAK,yDAAkDV,SAAlD,gBAAwE;AAClFW,QAAAA,MAAM,EAAE,MAD0E;AAElFC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT,SAFyE;AAMlFd,QAAAA,IAAI,EAAEe,IAAI,CAACC,SAAL,CAAe;AACnBhB,UAAAA,IAAI,EAAE,MAAKJ,KAAL,CAAWI,IADE;AAEnBH,UAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWD;AAFF,SAAf;AAN4E,OAAxE,CAAL,CAUJoB,IAVI,CAUC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVJ,EAWNF,IAXM,CAWD,gBAAe;AAAA,YAAbG,OAAa,QAAbA,OAAa;;AACnB,cAAKtB,KAAL,CAAWuB,UAAX,CAAsBD,OAAtB;AACD,OAbM,CAAP;AAgBD,K;;;;;;;6BAhDQ;AAAA,UACCrB,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkBT,IAAI,CAACF,QAAvB,MADF,EAEE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGQ;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,QAAQ,EAAE,KAAKK,YAA5C;AAA0D,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,EAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,CADF,CADF;AAUD;;;;EApBsBN,S;;AA2DzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass AddComment extends Component {\n  state = {\n    username: this.props.user.username,\n    body: '',\n    articleid: this.props.articleid\n  };\n  \n  render() {\n    const { user } = this.props;\n    \n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <p>commenting as:{user.username} </p>\n          <label htmlFor=\"body\">Comment</label>\n                <input type=\"text\" id=\"body\" onChange={this.handleChange} value={this.state.body}/>\n          <button type=\"submit\">Add Comment</button>\n        </form>\n      </div>\n    );\n  }\n  handleChange = event => {\n    const { id } = event.target;\n    this.setState({\n      [id]: event.target.value\n    });\n  };\n \n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.addComment();\n        this.setState({\n            body: ''\n        })\n    };\n\n  addComment = () => {\n    const { articleid } = this.state;\n    return fetch(`https://lloyd-news.herokuapp.com/api/articles/${articleid}/comments`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        body: this.state.body,\n        username: this.props.username\n      })\n    }).then(res => res.json())\n    .then(({comment}) => {\n      this.props.getComment(comment)\n    })\n\n\n  }\n    \n}\n\nexport default AddComment;"]},"metadata":{},"sourceType":"module"}