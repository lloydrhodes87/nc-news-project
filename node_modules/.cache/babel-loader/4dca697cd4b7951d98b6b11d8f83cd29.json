{"ast":null,"code":"import _toConsumableArray from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/AllArticles.js\";\nimport React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport * as api from '../Utils/fetchData';\nimport Loader from './Loader';\nimport formatDate from '../Utils/utilFunctions';\nimport AddArticle from './AddArticle';\nimport throttle from 'lodash.throttle';\n\nvar AllArticles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllArticles, _Component);\n\n  function AllArticles() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllArticles);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllArticles)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n    _this.state = {\n      articles: [],\n      isLoading: true,\n      value: '',\n      search: '',\n      page: 1,\n      hasAllArticles: false,\n      topic: ''\n    };\n\n    _this.componentDidMount = function () {\n      _this._isMounted = true;\n      window.addEventListener('scroll', _this.handleScroll);\n\n      _this.handleFetchArticles();\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      var _this$state = _this.state,\n          page = _this$state.page,\n          value = _this$state.value,\n          hasAllArticles = _this$state.hasAllArticles;\n      var slug = _this.props.slug;\n      var pageUpdate = prevState.page !== page;\n      var topicUpdate = prevProps.slug !== slug;\n\n      if (prevState.value !== value && value !== '') {\n        _this.resetToFirstPage();\n      }\n\n      if (pageUpdate && !hasAllArticles) {\n        _this.handleFetchArticles();\n      }\n\n      if (topicUpdate) {\n        _this.resetToFirstPage();\n      }\n    };\n\n    _this.handleScroll = throttle(function () {\n      var distanceFromTop = window.scrollY;\n      var heightOfScreen = window.innerHeight;\n      var fullDocumentHeight = document.body.scrollHeight;\n\n      if (distanceFromTop + heightOfScreen > fullDocumentHeight - 100) {\n        if (_this._isMounted) _this.setState(function (_ref) {\n          var page = _ref.page;\n          return {\n            page: page + 1\n          };\n        });\n      }\n    }, 1000);\n\n    _this.handleFetchArticles = function () {\n      var _this$state2 = _this.state,\n          page = _this$state2.page,\n          value = _this$state2.value;\n      var slug = _this.props.slug;\n      api.fetchArticles(slug, value, page).then(function (newArticles) {\n        _this.setState(function (_ref2) {\n          var articles = _ref2.articles;\n          return {\n            articles: page === 1 ? newArticles : [].concat(_toConsumableArray(articles), _toConsumableArray(newArticles)),\n            isLoading: false\n          };\n        });\n\n        if (!newArticles.length) _this.setState({\n          hasAllArticles: true,\n          isLoading: false\n        });\n      }).catch(function (err) {\n        _this.setState({\n          hasAllArticles: true,\n          isLoading: false\n        });\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        value: ''\n      });\n    };\n\n    _this.fetchNewAticle = function (article) {\n      _this.setState(function (prevState) {\n        return {\n          articles: [article].concat(_toConsumableArray(prevState.articles))\n        };\n      });\n    };\n\n    _this.resetToFirstPage = function () {\n      _this.setState({\n        page: 1,\n        hasAllArticles: false\n      }, _this.handleFetchArticles);\n    };\n\n    return _this;\n  }\n\n  _createClass(AllArticles, [{\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      var articles = this.state.articles;\n      var _this$props = this.props,\n          user = _this$props.user,\n          users = _this$props.users;\n      if (isLoading) return React.createElement(Loader, {\n        type: \"Bars\",\n        color: \"#somecolor\",\n        height: 80,\n        width: 80,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"articleHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Articles\"), React.createElement(\"div\", {\n        className: \"articleList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(AddArticle, {\n        fetchNewArticle: this.fetchNewAticle,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"sortLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Sort\"), React.createElement(\"div\", {\n        className: \"categories\",\n        id: \"sortbySelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"select\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        value: \"created_at\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"date first\"), React.createElement(\"option\", {\n        value: \"created_at&sort_ascending=true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"date last\"), React.createElement(\"option\", {\n        value: \"votes&sort_ascending=true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"votes\"), React.createElement(\"option\", {\n        value: \"comment_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"most comments\")))), articles.map(function (_ref3) {\n        var article_id = _ref3.article_id,\n            title = _ref3.title,\n            topic = _ref3.topic,\n            author = _ref3.author,\n            created_at = _ref3.created_at;\n        var userObject = users.filter(function (user) {\n          return user.username === author;\n        });\n        return React.createElement(\"li\", {\n          key: article_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"articleTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, title), React.createElement(\"p\", {\n          className: \"articlePTopic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Topic: \", topic), React.createElement(\"img\", {\n          className: \"avatarInArticles\",\n          src: userObject[0].avatar_url,\n          alt: \"avatar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"articleP\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Author: \", author), React.createElement(\"p\", {\n          className: \"articlePDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Date: \", formatDate(created_at)), React.createElement(Link, {\n          className: \"buttonViewArticles\",\n          to: \"/articles/\".concat(article_id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"View Article\"));\n      })));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }]);\n\n  return AllArticles;\n}(Component);\n\nexport default AllArticles;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/AllArticles.js"],"names":["React","Component","Link","api","Loader","formatDate","AddArticle","throttle","AllArticles","_isMounted","state","articles","isLoading","value","search","page","hasAllArticles","topic","componentDidMount","window","addEventListener","handleScroll","handleFetchArticles","componentDidUpdate","prevProps","prevState","slug","props","pageUpdate","topicUpdate","resetToFirstPage","distanceFromTop","scrollY","heightOfScreen","innerHeight","fullDocumentHeight","document","body","scrollHeight","setState","fetchArticles","then","newArticles","length","catch","err","handleChange","event","target","handleSubmit","preventDefault","fetchNewAticle","article","user","users","map","article_id","title","author","created_at","userObject","filter","username","avatar_url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport * as api from '../Utils/fetchData';\nimport Loader from './Loader';\nimport formatDate from '../Utils/utilFunctions';\nimport AddArticle from './AddArticle';\nimport throttle from 'lodash.throttle';\n\nclass AllArticles extends Component {\n  _isMounted = false;\n  state = {\n    articles: [],\n    isLoading: true,\n    value: '',\n    search: '',\n    page: 1,\n    hasAllArticles: false,\n    topic: ''\n  };\n  render() {\n    const { isLoading } = this.state;\n    let { articles } = this.state;\n    const { user, users } = this.props;\n\n    if (isLoading)\n      return <Loader type=\"Bars\" color=\"#somecolor\" height={80} width={80} />;\n    return (\n      <div>\n        <h2 className=\"articleHeading\">Articles</h2>\n        <div className=\"articleList\">\n          <AddArticle fetchNewArticle={this.fetchNewAticle} user={user} />\n          <form onSubmit={this.handleSubmit}>\n            <p id=\"sortLabel\">Sort</p>\n            <div className=\"categories\" id=\"sortbySelect\">\n              <select className=\"select\" onChange={this.handleChange}>\n                <option />\n                <option value=\"created_at\">date first</option>\n                <option value=\"created_at&sort_ascending=true\">\n                  date last\n                </option>\n                <option value=\"votes&sort_ascending=true\">votes</option>\n                <option value=\"comment_count\">most comments</option>\n              </select>\n            </div>\n          </form>\n\n          {articles.map(({ article_id, title, topic, author, created_at }) => {\n            const userObject = users.filter(user => user.username === author);\n            return (\n              <li key={article_id}>\n                <h3 className=\"articleTitle\">{title}</h3>\n\n                <p className=\"articlePTopic\">Topic: {topic}</p>\n                <img\n                  className=\"avatarInArticles\"\n                  src={userObject[0].avatar_url}\n                  alt=\"avatar\"\n                />\n                <p className=\"articleP\">Author: {author}</p>\n                <p className=\"articlePDate\">Date: {formatDate(created_at)}</p>\n\n                <Link\n                  className=\"buttonViewArticles\"\n                  to={`/articles/${article_id}`}\n                >\n                  View Article\n                </Link>\n              </li>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    this._isMounted = true;\n    window.addEventListener('scroll', this.handleScroll);\n    this.handleFetchArticles();\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const { page, value, hasAllArticles } = this.state;\n    const { slug } = this.props;\n    const pageUpdate = prevState.page !== page;\n    const topicUpdate = prevProps.slug !== slug;\n    if (prevState.value !== value && value !== '') {\n      this.resetToFirstPage();\n    }\n    if (pageUpdate && !hasAllArticles) {\n      this.handleFetchArticles();\n    }\n    if (topicUpdate) {\n      this.resetToFirstPage();\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleScroll = throttle(() => {\n    const distanceFromTop = window.scrollY;\n    const heightOfScreen = window.innerHeight;\n    const fullDocumentHeight = document.body.scrollHeight;\n\n    if (distanceFromTop + heightOfScreen > fullDocumentHeight - 100) {\n      if (this._isMounted)\n        this.setState(({ page }) => ({\n          page: page + 1\n        }));\n    }\n  }, 1000);\n\n  handleFetchArticles = () => {\n    const { page, value } = this.state;\n    const { slug } = this.props;\n    api\n      .fetchArticles(slug, value, page)\n      .then(newArticles => {\n        this.setState(({ articles }) => ({\n          articles: page === 1 ? newArticles : [...articles, ...newArticles],\n          isLoading: false\n        }));\n        if (!newArticles.length)\n          this.setState({\n            hasAllArticles: true,\n            isLoading: false\n          });\n      })\n      .catch(err => {\n        this.setState({\n          hasAllArticles: true,\n          isLoading: false\n        });\n      });\n  };\n\n  handleChange = event => {\n    this.setState({\n      value: event.target.value\n    });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      value: ''\n    });\n  };\n  fetchNewAticle = article => {\n    this.setState(prevState => ({\n      articles: [article, ...prevState.articles]\n    }));\n  };\n  resetToFirstPage = () => {\n    this.setState(\n      {\n        page: 1,\n        hasAllArticles: false\n      },\n      this.handleFetchArticles\n    );\n  };\n}\n\nexport default AllArticles;\n"]},"metadata":{},"sourceType":"module"}