{"ast":null,"code":"import _toConsumableArray from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: []\n    };\n\n    _this.handleFetchComments = function () {\n      var articleid = _this.props.articleid;\n      api.fetchComments(articleid).then(function (comments) {\n        _this.setState({\n          comments: comments\n        });\n      });\n    };\n\n    _this.getComment = function (comment) {\n      _this.setState(function (prevState) {\n        return {\n          comments: [comment].concat(_toConsumableArray(prevState.comments))\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var comments = this.props.comments;\n      var _this$props = this.props,\n          articleid = _this$props.articleid,\n          getComment = _this$props.getComment;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(AddComment, {\n        articleid: articleid,\n        getComment: getComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        return React.createElement(\"li\", {\n          key: comment.comment_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, comment.body), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"published by: \", comment.author), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"left: \", formatDate(comment.created_at)), React.createElement(Comment, {\n          votes: comment.votes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js"],"names":["React","Component","formatDate","Comment","AddComment","api","Comments","state","comments","handleFetchComments","articleid","props","fetchComments","then","setState","getComment","comment","prevState","map","comment_id","body","author","created_at","votes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;UAqBRC,mB,GAAsB,YAAM;AAAA,UAChBC,SADgB,GACF,MAAKC,KADH,CAChBD,SADgB;AAExBL,MAAAA,GAAG,CAACO,aAAJ,CAAkBF,SAAlB,EACKG,IADL,CACU,UAAAL,QAAQ,EAAI;AACd,cAAKM,QAAL,CAAc;AACVN,UAAAA,QAAQ,EAARA;AADU,SAAd;AAGH,OALL;AAMH,K;;UACDO,U,GAAa,UAACC,OAAD,EAAa;AACtB,YAAKF,QAAL,CAAc,UAACG,SAAD,EAAe;AACzB,eAAO;AAAET,UAAAA,QAAQ,GAAGQ,OAAH,4BAAeC,SAAS,CAACT,QAAzB;AAAV,SAAP;AACH,OAFD;AAIH,K;;;;;;;6BAhCQ;AAAA,UACGA,QADH,GACgB,KAAKG,KADrB,CACGH,QADH;AAAA,wBAE6B,KAAKG,KAFlC;AAAA,UAEGD,SAFH,eAEGA,SAFH;AAAA,UAEcK,UAFd,eAEcA,UAFd;AAGL,aAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEL,SAAvB;AAAkC,QAAA,UAAU,EAAEK,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,QAAQ,CAACU,GAAT,CAAa,UAAAF,OAAO;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIH,OAAO,CAACI,IAAZ,CADqB,EAErB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAkBJ,OAAO,CAACK,MAA1B,CAFqB,EAGrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUnB,UAAU,CAACc,OAAO,CAACM,UAAT,CAApB,CAHqB,EAIrB,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAEN,OAAO,CAACO,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJqB,CAAJ;AAAA,OAApB,CADL,CAFJ,CAFA;AAcH;;;;EArBkBtB,S;;AAuCvB,eAAeK,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\n\nclass Comments extends Component {\n    state = {\n        comments: []\n    }\n    render() {\n        const { comments } = this.props;\n        const { articleid, getComment } = this.props\n        return (\n        \n        <div>\n            <AddComment articleid={articleid} getComment={getComment} />\n            <ul>\n                {comments.map(comment => <li key={comment.comment_id}>\n                    <p>{comment.body}</p>\n                    <p>published by: {comment.author}</p>\n                    <p>left: {formatDate(comment.created_at)}</p>\n                    <Comment votes={comment.votes} />\n                </li>)}\n            </ul>\n        </div>\n        );\n    }\n    handleFetchComments = () => {\n        const { articleid } = this.props;\n        api.fetchComments(articleid)\n            .then(comments => {\n                this.setState({\n                    comments\n                })\n            })\n    }\n    getComment = (comment) => {\n        this.setState((prevState) => {\n            return { comments: [comment, ...prevState.comments] };\n        })\n\n    }\n}\n\nexport default Comments;\n\n\n"]},"metadata":{},"sourceType":"module"}