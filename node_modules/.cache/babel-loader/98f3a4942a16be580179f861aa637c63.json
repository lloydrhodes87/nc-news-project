{"ast":null,"code":"import _toConsumableArray from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\nimport axios from 'axios';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: []\n    };\n\n    _this.componentDidMount = function () {\n      _this.handleFetchComments();\n    };\n\n    _this.handleFetchComments = function () {\n      var articleid = _this.props.articleid;\n      api.fetchComments(articleid).then(function (comments) {\n        _this.setState({\n          comments: comments\n        });\n      });\n    };\n\n    _this.getComment = function (comment) {\n      _this.setState(function (prevState) {\n        return {\n          comments: [comment].concat(_toConsumableArray(prevState.comments))\n        };\n      });\n    };\n\n    _this.deleteComment = function (commentid) {\n      _this.setState(function (prevState) {\n        return {\n          comments: prevState.comments.filter(function (_ref) {\n            var comment_id = _ref.comment_id;\n            return comment_id !== commentid;\n          })\n        };\n      }, function () {\n        console.log('state after delete', _this.state);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var comments = this.state.comments;\n      var articleid = this.props.articleid;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(AddComment, {\n        articleid: articleid,\n        getComment: this.getComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        return React.createElement(\"li\", {\n          key: comment.comment_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, comment.body), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"published by: \", comment.author), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"left: \", formatDate(comment.created_at)), React.createElement(Comment, {\n          votes: comment.votes,\n          articleid: articleid,\n          commentid: comment.comment_id,\n          deleteComment: _this2.deleteComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js"],"names":["React","Component","formatDate","Comment","AddComment","api","axios","Comments","state","comments","componentDidMount","handleFetchComments","articleid","props","fetchComments","then","setState","getComment","comment","prevState","deleteComment","commentid","filter","comment_id","console","log","map","body","author","created_at","votes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;UA2BRC,iB,GAAoB,YAAM;AACtB,YAAKC,mBAAL;AACH,K;;UACDA,mB,GAAsB,YAAM;AAAA,UAChBC,SADgB,GACF,MAAKC,KADH,CAChBD,SADgB;AAExBP,MAAAA,GAAG,CAACS,aAAJ,CAAkBF,SAAlB,EACKG,IADL,CACU,UAAAN,QAAQ,EAAI;AACd,cAAKO,QAAL,CAAc;AACVP,UAAAA,QAAQ,EAARA;AADU,SAAd;AAGH,OALL;AAMH,K;;UACDQ,U,GAAa,UAACC,OAAD,EAAa;AACtB,YAAKF,QAAL,CAAc,UAACG,SAAD,EAAe;AACzB,eAAO;AAAEV,UAAAA,QAAQ,GAAGS,OAAH,4BAAeC,SAAS,CAACV,QAAzB;AAAV,SAAP;AACH,OAFD;AAIH,K;;UACDW,a,GAAgB,UAACC,SAAD,EAAe;AAE3B,YAAKL,QAAL,CAAc,UAACG,SAAD;AAAA,eAAgB;AAC1BV,UAAAA,QAAQ,EAAEU,SAAS,CAACV,QAAV,CAAmBa,MAAnB,CAA0B;AAAA,gBAAEC,UAAF,QAAEA,UAAF;AAAA,mBAAkBA,UAAU,KAAKF,SAAjC;AAAA,WAA1B;AADgB,SAAhB;AAAA,OAAd,EAEI,YAAM;AACNG,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,MAAKjB,KAAvC;AACH,OAJD;AAKH,K;;;;;;;6BAjDQ;AAAA;;AAAA,UACGC,QADH,GACgB,KAAKD,KADrB,CACGC,QADH;AAAA,UAEGG,SAFH,GAEiB,KAAKC,KAFtB,CAEGD,SAFH;AAIL,aAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAEA,SAAvB;AAAkC,QAAA,UAAU,EAAE,KAAKK,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,QAAQ,CAACiB,GAAT,CAAa,UAAAR,OAAO;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIL,OAAO,CAACS,IAAZ,CADqB,EAErB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAkBT,OAAO,CAACU,MAA1B,CAFqB,EAGrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAU1B,UAAU,CAACgB,OAAO,CAACW,UAAT,CAApB,CAHqB,EAIrB,oBAAC,OAAD;AACI,UAAA,KAAK,EAAEX,OAAO,CAACY,KADnB;AAEI,UAAA,SAAS,EAAElB,SAFf;AAGI,UAAA,SAAS,EAAEM,OAAO,CAACK,UAHvB;AAII,UAAA,aAAa,EAAE,MAAI,CAACH,aAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJqB,CAAJ;AAAA,OAApB,CADL,CAFJ,CAFA;AAmBH;;;;EA3BkBnB,S;;AAwDvB,eAAeM,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\nimport axios from 'axios';\n\nclass Comments extends Component {\n    state = {\n        comments: []\n    }\n    render() {\n        const { comments } = this.state;\n        const { articleid } = this.props;\n\n        return (\n        \n        <div>\n            <AddComment articleid={articleid} getComment={this.getComment} />\n            <ul>\n                {comments.map(comment => <li key={comment.comment_id}>\n                    <p>{comment.body}</p>\n                    <p>published by: {comment.author}</p>\n                    <p>left: {formatDate(comment.created_at)}</p>\n                    <Comment \n                        votes={comment.votes} \n                        articleid={articleid}\n                        commentid={comment.comment_id}\n                        deleteComment={this.deleteComment}\n                    />\n                </li>)}\n            </ul>\n        </div>\n        );\n    }\n    componentDidMount = () => {\n        this.handleFetchComments();\n    }\n    handleFetchComments = () => {\n        const { articleid } = this.props;\n        api.fetchComments(articleid)\n            .then(comments => {\n                this.setState({\n                    comments\n                })\n            })\n    }\n    getComment = (comment) => {\n        this.setState((prevState) => {\n            return { comments: [comment, ...prevState.comments] };\n        })\n\n    }\n    deleteComment = (commentid) => {\n    \n        this.setState((prevState) => ({\n            comments: prevState.comments.filter(({comment_id}) => comment_id !== commentid)\n        }), () => {\n            console.log('state after delete', this.state)\n        })\n    }\n}\n\nexport default Comments;\n\n\n"]},"metadata":{},"sourceType":"module"}