{"ast":null,"code":"import _defineProperty from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/AddComment.js\";\nimport React, { Component } from 'react';\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddComment, _Component);\n\n  function AddComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      body: ''\n    };\n\n    _this.handleChange = function (event) {\n      var id = event.target.id;\n\n      _this.setState(_defineProperty({}, id, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.addComment();\n\n      _this.setState({\n        body: ''\n      });\n    };\n\n    _this.addComment = function () {\n      var articleid = _this.props.articleid;\n      return fetch(\"https://lloyd-news.herokuapp.com/api/articles/\".concat(articleid, \"/comments\"), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          body: _this.state.body,\n          username: _this.props.user.username\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (_ref) {\n        var comment = _ref.comment;\n        console.log(comment);\n\n        _this.props.getComment(comment);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      var body = this.state.body;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"avatarInArticles\",\n        src: user.avatar_url,\n        alt: \"avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"commenting as:\", user.username, \" \"), React.createElement(\"div\", {\n        className: \"addCommentButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        type: \"text\",\n        id: \"body\",\n        onChange: this.handleChange,\n        value: body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Add Comment\"))));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nexport default AddComment;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/AddComment.js"],"names":["React","Component","AddComment","state","body","handleChange","event","id","target","setState","value","handleSubmit","preventDefault","addComment","articleid","props","fetch","method","headers","Accept","JSON","stringify","username","user","then","res","json","comment","console","log","getComment","avatar_url"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAsBRC,Y,GAAe,UAAAC,KAAK,EAAI;AAAA,UACdC,EADc,GACPD,KAAK,CAACE,MADC,CACdD,EADc;;AAEtB,YAAKE,QAAL,qBACGF,EADH,EACQD,KAAK,CAACE,MAAN,CAAaE,KADrB;AAGD,K;;UAGCC,Y,GAAe,UAACL,KAAD,EAAW;AACtBA,MAAAA,KAAK,CAACM,cAAN;;AACA,YAAKC,UAAL;;AACA,YAAKJ,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,K;;UAEHS,U,GAAa,YAAM;AAAA,UACTC,SADS,GACK,MAAKC,KADV,CACTD,SADS;AAEjB,aAAOE,KAAK,yDAAkDF,SAAlD,gBAAwE;AAClFG,QAAAA,MAAM,EAAE,MAD0E;AAElFC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT,SAFyE;AAMlFf,QAAAA,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAe;AACnBjB,UAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC,IADE;AAEnBkB,UAAAA,QAAQ,EAAE,MAAKP,KAAL,CAAWQ,IAAX,CAAgBD;AAFP,SAAf;AAN4E,OAAxE,CAAL,CAUJE,IAVI,CAUC,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAVJ,EAWNF,IAXM,CAWD,gBAAe;AAAA,YAAbG,OAAa,QAAbA,OAAa;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,cAAKZ,KAAL,CAAWe,UAAX,CAAsBH,OAAtB;AACD,OAdM,CAAP;AAiBD,K;;;;;;;6BArDQ;AAAA,UACCJ,IADD,GACU,KAAKR,KADf,CACCQ,IADD;AAAA,UAECnB,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;AAIP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKO,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,GAAG,EAAEY,IAAI,CAACQ,UAA5C;AAAwD,QAAA,GAAG,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkBR,IAAI,CAACD,QAAvB,MAFF,EAGE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAC,MAAzB;AAAgC,QAAA,QAAQ,EAAE,KAAKjB,YAA/C;AAA6D,QAAA,KAAK,EAAED,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CAHF,CADF,CADF;AAaD;;;;EAtBsBH,S;;AA8DzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass AddComment extends Component {\n  state = {\n    body: '',\n  };\n  \n  render() {\n    const { user } = this.props;\n    const { body } = this.state;\n    \n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <img className=\"avatarInArticles\" src={user.avatar_url} alt=\"avatar\"></img>\n          <p>commenting as:{user.username} </p>\n          <div className=\"addCommentButton\">\n            <label htmlFor=\"body\"></label>\n            <textarea type=\"text\" id=\"body\" onChange={this.handleChange} value={body} />\n            <button type=\"submit\">Add Comment</button>\n          </div>        \n        </form>\n      </div>\n    );\n  }\n  handleChange = event => {\n    const { id } = event.target;\n    this.setState({\n      [id]: event.target.value\n    });\n  };\n \n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.addComment();\n        this.setState({\n            body: ''\n        })\n    };\n\n  addComment = () => {\n    const { articleid } = this.props;\n    return fetch(`https://lloyd-news.herokuapp.com/api/articles/${articleid}/comments`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        body: this.state.body,\n        username: this.props.user.username\n      })\n    }).then(res => res.json())\n    .then(({comment}) => {\n      console.log(comment);\n      this.props.getComment(comment)\n    })\n\n\n  }\n    \n}\n\nexport default AddComment;"]},"metadata":{},"sourceType":"module"}