{"ast":null,"code":"import _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/AllTopics.js\";\nimport React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport * as api from '../Utils/fetchData';\nimport Loader from './Loader';\n\nvar AllTopics =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllTopics, _Component);\n\n  function AllTopics() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllTopics);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllTopics)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      topics: []\n    };\n\n    _this.componentDidMount = function () {\n      _this.fetchTopics();\n    };\n\n    _this.fetchTopics = function () {\n      api.fetchTopics().then(function (topics) {\n        _this.setState({\n          topics: topics,\n          isLoading: false\n        }, function () {\n          return console.log(_this.state);\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllTopics, [{\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      var topics = this.state.topics;\n      console.log(topics);\n      if (isLoading) return React.createElement(Loader, {\n        type: \"Bars\",\n        color: \"#somecolor\",\n        height: 80,\n        width: 80,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return AllTopics;\n}(Component);\n\nexport default AllTopics;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/AllTopics.js"],"names":["React","Component","Link","api","Loader","AllTopics","state","isLoading","topics","componentDidMount","fetchTopics","then","setState","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAGMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,IADP;AAEJC,MAAAA,MAAM,EAAE;AAFJ,K;;UAeRC,iB,GAAoB,YAAM;AACtB,YAAKC,WAAL;AACH,K;;UACDA,W,GAAc,YAAM;AAChBP,MAAAA,GAAG,CAACO,WAAJ,GACKC,IADL,CACU,UAAAH,MAAM,EAAI;AACZ,cAAKI,QAAL,CAAc;AACVJ,UAAAA,MAAM,EAANA,MADU;AAEVD,UAAAA,SAAS,EAAE;AAFD,SAAd,EAGG;AAAA,iBAAMM,OAAO,CAACC,GAAR,CAAY,MAAKR,KAAjB,CAAN;AAAA,SAHH;AAIH,OANL;AAOH,K;;;;;;;6BAtBQ;AAAA,UACGC,SADH,GACiB,KAAKD,KADtB,CACGC,SADH;AAAA,UAEGC,MAFH,GAEc,KAAKF,KAFnB,CAEGE,MAFH;AAGLK,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,UAAID,SAAJ,EAAe,OAAO,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,KAAK,EAAC,YAA1B;AAAuC,QAAA,MAAM,EAAE,EAA/C;AAAmD,QAAA,KAAK,EAAE,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACf,aACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL;AAKH;;;;EAfmBN,S;;AA+BxB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport * as api from '../Utils/fetchData';\nimport Loader from './Loader';\n\n\nclass AllTopics extends Component {\n    state = {\n        isLoading: true,\n        topics: []\n    }\n    render() {\n        const { isLoading } = this.state;\n        const { topics } = this.state;\n        console.log(topics)\n        if (isLoading) return <Loader type=\"Bars\" color=\"#somecolor\" height={80} width={80} />;\n        return (\n             <div>\n            \n        </div>\n        );\n    }\n    componentDidMount = () => {\n        this.fetchTopics();\n    }\n    fetchTopics = () => {\n        api.fetchTopics()\n            .then(topics => {\n                this.setState({\n                    topics,\n                    isLoading: false\n                }, () => console.log(this.state))\n            })\n    }\n\n}\n\nexport default AllTopics;"]},"metadata":{},"sourceType":"module"}