{"ast":null,"code":"import _toConsumableArray from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/Arcticle.js\";\nimport React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport Comments from './Comments';\nimport * as api from '../Utils/fetchData';\nimport Loader from './Loader';\nimport formatDate from '../Utils/utilFunctions';\n\nvar Article =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Article, _Component);\n\n  function Article() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Article);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Article)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      toggleComments: false,\n      article: [],\n      isLoading: true,\n      comments: []\n    };\n\n    _this.getComment = function (comment) {\n      _this.setState(function (prevState) {\n        return {\n          comments: [].concat(_toConsumableArray(prevState), _toConsumableArray(comment))\n        };\n      }, function () {\n        console.log(_this.state);\n      });\n    };\n\n    _this.handleToggleComments = function () {\n      _this.setState(function (prevState) {\n        return {\n          toggleComments: !prevState.toggleComments\n        };\n      });\n    };\n\n    _this.handleFetchArticle = function () {\n      var articleid = _this.props.articleid;\n      api.fetchArticle(articleid).then(function (article) {\n        var singleArticle = article.article;\n\n        _this.setState({\n          article: singleArticle,\n          isLoading: false\n        });\n      });\n    };\n\n    _this.handleFetchComments = function () {\n      var articleid = _this.props.articleid;\n      api.fetchComments(articleid).then(function (comments) {\n        _this.setState({\n          comments: comments\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Article, [{\n    key: \"render\",\n    value: function render() {\n      var isLoading = this.state.isLoading;\n      var _this$state$article = this.state.article,\n          body = _this$state$article.body,\n          title = _this$state$article.title,\n          author = _this$state$article.author,\n          created_at = _this$state$article.created_at;\n      if (isLoading) return React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n      var articleid = this.props.articleid;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, body), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"by \", author), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"published: \", formatDate(created_at)), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/articles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Back\")), React.createElement(\"button\", {\n        onClick: this.handleToggleComments,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"comments\"), this.state.toggleComments && React.createElement(Comments, {\n        comments: this.state.comments,\n        getComment: this.getComment,\n        articleid: articleid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleFetchArticle();\n      this.handleFetchComments();\n    }\n  }]);\n\n  return Article;\n}(Component);\n\nexport default Article;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/Arcticle.js"],"names":["React","Component","Link","Comments","api","Loader","formatDate","Article","state","toggleComments","article","isLoading","comments","getComment","comment","setState","prevState","console","log","handleToggleComments","handleFetchArticle","articleid","props","fetchArticle","then","singleArticle","handleFetchComments","fetchComments","body","title","author","created_at"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from '@reach/router';\nimport Comments from './Comments';\nimport * as api from '../Utils/fetchData';\nimport Loader from './Loader';\nimport formatDate from '../Utils/utilFunctions';\n\nclass Article extends Component {\n    \n    state = {\n        toggleComments: false,\n        article: [],\n        isLoading: true,\n        comments: []\n    }\n    render() {\n        \n        const { isLoading } = this.state;\n        const { body, title, author, created_at } = this.state.article\n        if (isLoading) return <Loader />;\n\n        const {articleid } = this.props;\n       \n        return <div>\n            <h2>{title}</h2>\n            <p>{body}</p>\n            <p>by {author}</p>\n            <p>published: {formatDate(created_at)}</p>\n            <button type=\"submit\">\n              <Link to=\"/articles\">Back</Link>\n            </button>\n            <button onClick={this.handleToggleComments} type=\"submit\">\n              comments\n            </button>\n            {this.state.toggleComments && \n                <Comments \n                    comments={this.state.comments} \n                    getComment={this.getComment} \n                    articleid={articleid}\n                />}\n          </div>;\n    }\n  \n    componentDidMount() {\n       this.handleFetchArticle();  \n       this.handleFetchComments();\n    }\n    \n    getComment = (comment) => {\n        this.setState((prevState) => ({\n            comments: [...prevState, ...comment]\n        }), () => {\n            console.log(this.state)\n        })\n        \n    }\n    \n    handleToggleComments = () => {\n        this.setState((prevState) => ({\n            toggleComments: !prevState.toggleComments\n        }))\n    }\n    handleFetchArticle = () => {\n        const { articleid } = this.props;\n        api.fetchArticle(articleid)\n        .then(article => {\n            const singleArticle = article.article\n            this.setState({\n                article: singleArticle,\n                isLoading: false,\n            })\n        })\n    }\n    handleFetchComments = () => {\n        const { articleid } = this.props;\n        api.fetchComments(articleid)\n        .then(comments => {\n            this.setState({\n                comments\n            })\n        })\n    }\n}\n\nexport default Article;\n\n\n"]},"metadata":{},"sourceType":"module"}