{"ast":null,"code":"import _toConsumableArray from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\nimport throttle from 'lodash.throttle';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: [],\n      page: 1,\n      sort_by: '',\n      hasAllComments: false,\n      limit: 3\n    };\n\n    _this.componentDidMount = function () {\n      _this.handleFetchComments();\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      var pageUpdate = prevState.page !== _this.state.page;\n\n      if (pageUpdate && !_this.state.hasAllArticles) {\n        _this.handleFetchComments();\n      }\n    };\n\n    _this.handleScroll = throttle(function () {\n      var distanceFromTop = window.scrollY;\n      var heightOfScreen = window.innerHeight;\n      var fullDocumentHeight = document.body.scrollHeight;\n\n      if (distanceFromTop + heightOfScreen > fullDocumentHeight - 100) {\n        _this.setState(function (_ref) {\n          var page = _ref.page;\n          return {\n            page: page + 1\n          };\n        });\n      }\n    }, 1000);\n\n    _this.handleFetchComments = function () {\n      var articleid = _this.props.articleid;\n      var _this$state = _this.state,\n          sort_by = _this$state.sort_by,\n          page = _this$state.page,\n          limit = _this$state.limit;\n      console.log(limit);\n      api.fetchComments(articleid, sort_by, page, limit).then(function (newComments) {\n        _this.setState(function (_ref2) {\n          var comments = _ref2.comments;\n          return {\n            comments: page === 1 ? newComments : [].concat(_toConsumableArray(comments), _toConsumableArray(newComments))\n          };\n        });\n\n        if (!newComments.length) _this.setState({\n          hasAllComments: true\n        });\n      }).catch(function (err) {\n        _this.setState({\n          hasAllComments: true\n        });\n      });\n    };\n\n    _this.getComment = function (comment) {\n      _this.setState(function (prevState) {\n        return {\n          comments: [comment].concat(_toConsumableArray(prevState.comments))\n        };\n      });\n    };\n\n    _this.deleteComment = function (commentid) {\n      _this.setState(function (prevState) {\n        return {\n          comments: prevState.comments.filter(function (_ref3) {\n            var comment_id = _ref3.comment_id;\n            return comment_id !== commentid;\n          })\n        };\n      }, function () {\n        console.log('state after delete', _this.state);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var comments = this.state.comments;\n      var _this$props = this.props,\n          articleid = _this$props.articleid,\n          user = _this$props.user;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(AddComment, {\n        articleid: articleid,\n        getComment: this.getComment,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        return React.createElement(\"li\", {\n          key: comment.comment_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, comment.body), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"published by: \", user.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"left: \", formatDate(comment.created_at)), React.createElement(Comment, {\n          votes: comment.votes,\n          articleid: articleid,\n          commentid: comment.comment_id,\n          deleteComment: _this2.deleteComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js"],"names":["React","Component","formatDate","Comment","AddComment","api","throttle","Comments","state","comments","page","sort_by","hasAllComments","limit","componentDidMount","handleFetchComments","componentDidUpdate","prevProps","prevState","pageUpdate","hasAllArticles","handleScroll","distanceFromTop","window","scrollY","heightOfScreen","innerHeight","fullDocumentHeight","document","body","scrollHeight","setState","articleid","props","console","log","fetchComments","then","newComments","length","catch","err","getComment","comment","deleteComment","commentid","filter","comment_id","user","map","name","created_at","votes"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;IAGMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,IAAI,EAAE,CAFF;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,cAAc,EAAE,KAJZ;AAKJC,MAAAA,KAAK,EAAE;AALH,K;;UAmCRC,iB,GAAoB,YAAM;AACtB,YAAKC,mBAAL;AACH,K;;UAEDC,kB,GAAqB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AAC3C,UAAMC,UAAU,GAAGD,SAAS,CAACR,IAAV,KAAmB,MAAKF,KAAL,CAAWE,IAAjD;;AACA,UAAIS,UAAU,IAAI,CAAC,MAAKX,KAAL,CAAWY,cAA9B,EAA8C;AAC1C,cAAKL,mBAAL;AACH;AACJ,K;;UAGDM,Y,GAAef,QAAQ,CAAC,YAAM;AAC1B,UAAMgB,eAAe,GAAGC,MAAM,CAACC,OAA/B;AACA,UAAMC,cAAc,GAAGF,MAAM,CAACG,WAA9B;AACA,UAAMC,kBAAkB,GAAGC,QAAQ,CAACC,IAAT,CAAcC,YAAzC;;AAEA,UAAIR,eAAe,GAAGG,cAAlB,GAAmCE,kBAAkB,GAAG,GAA5D,EAAiE;AAC7D,cAAKI,QAAL,CAAc;AAAA,cAAGrB,IAAH,QAAGA,IAAH;AAAA,iBAAe;AACzBA,YAAAA,IAAI,EAAEA,IAAI,GAAG;AADY,WAAf;AAAA,SAAd;AAGH;AACJ,KAVsB,EAUpB,IAVoB,C;;UAYvBK,mB,GAAsB,YAAM;AAAA,UAChBiB,SADgB,GACF,MAAKC,KADH,CAChBD,SADgB;AAAA,wBAES,MAAKxB,KAFd;AAAA,UAEhBG,OAFgB,eAEhBA,OAFgB;AAAA,UAEPD,IAFO,eAEPA,IAFO;AAAA,UAEDG,KAFC,eAEDA,KAFC;AAGxBqB,MAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAZ;AACAR,MAAAA,GAAG,CAAC+B,aAAJ,CAAkBJ,SAAlB,EAA6BrB,OAA7B,EAAsCD,IAAtC,EAA4CG,KAA5C,EACKwB,IADL,CACU,UAAAC,WAAW,EAAI;AACjB,cAAKP,QAAL,CAAc;AAAA,cAAGtB,QAAH,SAAGA,QAAH;AAAA,iBAAmB;AAC7BA,YAAAA,QAAQ,EAAEC,IAAI,KAAK,CAAT,GAAa4B,WAAb,gCAA+B7B,QAA/B,sBAA4C6B,WAA5C;AADmB,WAAnB;AAAA,SAAd;;AAIA,YAAI,CAACA,WAAW,CAACC,MAAjB,EACI,MAAKR,QAAL,CAAc;AACVnB,UAAAA,cAAc,EAAE;AADN,SAAd;AAIP,OAXL,EAYK4B,KAZL,CAYW,UAAAC,GAAG,EAAI;AACV,cAAKV,QAAL,CAAc;AACVnB,UAAAA,cAAc,EAAE;AADN,SAAd;AAIH,OAjBL;AAmBH,K;;UACD8B,U,GAAa,UAACC,OAAD,EAAa;AACtB,YAAKZ,QAAL,CAAc,UAACb,SAAD,EAAe;AACzB,eAAO;AAAET,UAAAA,QAAQ,GAAGkC,OAAH,4BAAezB,SAAS,CAACT,QAAzB;AAAV,SAAP;AACH,OAFD;AAIH,K;;UAEDmC,a,GAAgB,UAACC,SAAD,EAAe;AAC3B,YAAKd,QAAL,CAAc,UAACb,SAAD;AAAA,eAAgB;AAC1BT,UAAAA,QAAQ,EAAES,SAAS,CAACT,QAAV,CAAmBqC,MAAnB,CAA0B;AAAA,gBAAEC,UAAF,SAAEA,UAAF;AAAA,mBAAkBA,UAAU,KAAKF,SAAjC;AAAA,WAA1B;AADgB,SAAhB;AAAA,OAAd,EAEI,YAAM;AACNX,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,MAAK3B,KAAvC;AACH,OAJD;AAKH,K;;;;;;;6BAzFQ;AAAA;;AAAA,UACGC,QADH,GACgB,KAAKD,KADrB,CACGC,QADH;AAAA,wBAEuB,KAAKwB,KAF5B;AAAA,UAEGD,SAFH,eAEGA,SAFH;AAAA,UAEcgB,IAFd,eAEcA,IAFd;AAIL,aAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACI,QAAA,SAAS,EAAEhB,SADf;AAEI,QAAA,UAAU,EAAE,KAAKU,UAFrB;AAGI,QAAA,IAAI,EAAEM,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKvC,QAAQ,CAACwC,GAAT,CAAa,UAAAN,OAAO;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIJ,OAAO,CAACd,IAAZ,CADqB,EAErB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAkBmB,IAAI,CAACE,IAAvB,CAFqB,EAGrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUhD,UAAU,CAACyC,OAAO,CAACQ,UAAT,CAApB,CAHqB,EAIrB,oBAAC,OAAD;AACI,UAAA,KAAK,EAAER,OAAO,CAACS,KADnB;AAEI,UAAA,SAAS,EAAEpB,SAFf;AAGI,UAAA,SAAS,EAAEW,OAAO,CAACI,UAHvB;AAII,UAAA,aAAa,EAAE,MAAI,CAACH,aAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJqB,CAAJ;AAAA,OAApB,CADL,CANJ,CAFA;AAuBH;;;;EAnCkB3C,S;;AAsGvB,eAAeM,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Comment from './Comment';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\nimport throttle from 'lodash.throttle';\n\n\nclass Comments extends Component {\n    state = {\n        comments: [],\n        page: 1,\n        sort_by: '',\n        hasAllComments: false,\n        limit: 3\n    }\n    render() {\n        const { comments } = this.state;\n        const { articleid, user } = this.props;\n\n        return (\n        \n        <div>\n            <AddComment \n                articleid={articleid} \n                getComment={this.getComment} \n                user={user}\n            />\n            <ul>\n                {comments.map(comment => <li key={comment.comment_id}>\n                    <p>{comment.body}</p>\n                    <p>published by: {user.name}</p>\n                    <p>left: {formatDate(comment.created_at)}</p>\n                    <Comment \n                        votes={comment.votes} \n                        articleid={articleid}\n                        commentid={comment.comment_id}\n                        deleteComment={this.deleteComment}\n                    />\n                </li>)}\n            </ul>\n        </div>\n        );\n    }\n    componentDidMount = () => {\n        this.handleFetchComments();\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        const pageUpdate = prevState.page !== this.state.page;\n        if (pageUpdate && !this.state.hasAllArticles) {\n            this.handleFetchComments()\n        }\n    }\n\n\n    handleScroll = throttle(() => {\n        const distanceFromTop = window.scrollY;\n        const heightOfScreen = window.innerHeight;\n        const fullDocumentHeight = document.body.scrollHeight;\n\n        if (distanceFromTop + heightOfScreen > fullDocumentHeight - 100) {\n            this.setState(({ page }) => ({\n                page: page + 1\n            }))\n        }\n    }, 1000) \n\n    handleFetchComments = () => {\n        const { articleid } = this.props;\n        const { sort_by, page, limit } = this.state;\n        console.log(limit)\n        api.fetchComments(articleid, sort_by, page, limit)\n            .then(newComments => {\n                this.setState(({ comments }) => ({\n                    comments: page === 1 ? newComments : [...comments, ...newComments],\n                    \n                }));\n                if (!newComments.length)\n                    this.setState({\n                        hasAllComments: true,\n                        \n                    })\n            })\n            .catch(err => {\n                this.setState({\n                    hasAllComments: true,\n                   \n                })\n            })\n           \n    }\n    getComment = (comment) => {\n        this.setState((prevState) => {\n            return { comments: [comment, ...prevState.comments] };\n        })\n\n    }\n    \n    deleteComment = (commentid) => {\n        this.setState((prevState) => ({\n            comments: prevState.comments.filter(({comment_id}) => comment_id !== commentid)\n        }), () => {\n            console.log('state after delete', this.state)\n        })\n    }\n\n   \n}\n\nexport default Comments;\n\n\n"]},"metadata":{},"sourceType":"module"}