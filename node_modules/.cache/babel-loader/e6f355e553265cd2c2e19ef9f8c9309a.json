{"ast":null,"code":"import _toConsumableArray from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lloydrhodes/Desktop/nc-news-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Voter from './Voter';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\nimport throttle from 'lodash.throttle';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n    _this.state = {\n      comments: [],\n      page: 1,\n      sort_by: 'created_at',\n      hasAllComments: false,\n      limit: 10\n    };\n\n    _this.componentDidMount = function () {\n      _this._isMounted = true;\n      window.addEventListener('scroll', _this.handleScroll);\n\n      _this.handleFetchComments();\n    };\n\n    _this.componentDidUpdate = function (prevProps, prevState) {\n      var pageUpdate = prevState.page !== _this.state.page;\n\n      if (pageUpdate && !_this.state.hasAllComments) {\n        _this.handleFetchComments();\n      }\n    };\n\n    _this.handleScroll = throttle(function () {\n      var distanceFromTop = window.scrollY;\n      var heightOfScreen = window.innerHeight;\n      var fullDocumentHeight = document.body.scrollHeight;\n\n      if (distanceFromTop + heightOfScreen > fullDocumentHeight - 100) {\n        _this.setState(function (_ref) {\n          var page = _ref.page;\n          return {\n            page: page + 1\n          };\n        });\n      }\n    }, 1000);\n\n    _this.handleFetchComments = function () {\n      var articleid = _this.props.articleid;\n      var _this$state = _this.state,\n          sort_by = _this$state.sort_by,\n          page = _this$state.page,\n          limit = _this$state.limit;\n      api.fetchComments(articleid, sort_by, page, limit).then(function (newComments) {\n        _this.setState(function (_ref2) {\n          var comments = _ref2.comments;\n          return {\n            comments: page === 1 ? newComments : [].concat(_toConsumableArray(comments), _toConsumableArray(newComments))\n          };\n        });\n\n        if (!newComments.length) _this.setState({\n          hasAllComments: true\n        });\n      }).catch(function (err) {\n        _this.setState({\n          hasAllComments: true\n        });\n      });\n    };\n\n    _this.getComment = function (comment) {\n      console.log(comment, 'comment is here');\n\n      _this.setState(function (prevState) {\n        return {\n          comments: [comment].concat(_toConsumableArray(prevState.comments))\n        };\n      });\n    };\n\n    _this.deleteComment = function (commentid) {\n      _this.setState(function (prevState) {\n        return {\n          comments: prevState.comments.filter(function (_ref3) {\n            var comment_id = _ref3.comment_id;\n            return comment_id !== commentid;\n          })\n        };\n      });\n    };\n\n    _this.handleDeleteComment = function (articleid, commentid) {\n      console.log('1');\n      api.deleteData(articleid, commentid).then(function (res) {\n        _this.deleteComment(commentid);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var comments = this.state.comments;\n      var _this$props = this.props,\n          articleid = _this$props.articleid,\n          user = _this$props.user;\n      return React.createElement(\"div\", {\n        className: \"commentsDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(AddComment, {\n        articleid: articleid,\n        getComment: this.getComment,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"commentList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        return React.createElement(\"li\", {\n          key: comment.comment_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, comment.body), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"published by: \", comment.author), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"left: \", formatDate(comment.created_at)), React.createElement(Voter, {\n          votes: comment.votes,\n          articleid: articleid,\n          commentid: comment.comment_id,\n          parent: \"comments\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this2.handleDeleteComment(articleid, comment.comment_id);\n          },\n          disabled: user.username !== comment.author,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Delete\"));\n      }))));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/lloydrhodes/Desktop/nc-news-project/src/components/Comments.js"],"names":["React","Component","formatDate","Voter","AddComment","api","throttle","Comments","_isMounted","state","comments","page","sort_by","hasAllComments","limit","componentDidMount","window","addEventListener","handleScroll","handleFetchComments","componentDidUpdate","prevProps","prevState","pageUpdate","distanceFromTop","scrollY","heightOfScreen","innerHeight","fullDocumentHeight","document","body","scrollHeight","setState","articleid","props","fetchComments","then","newComments","length","catch","err","getComment","comment","console","log","deleteComment","commentid","filter","comment_id","handleDeleteComment","deleteData","res","user","map","author","created_at","votes","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport formatDate from '../Utils/utilFunctions';\nimport Voter from './Voter';\nimport AddComment from './AddComment';\nimport * as api from '../Utils/fetchData';\nimport throttle from 'lodash.throttle';\n\n\nclass Comments extends Component {\n  _isMounted = false;\n  state = {\n    comments: [],\n    page: 1,\n    sort_by: 'created_at',\n    hasAllComments: false,\n    limit: 10\n  };\n  render() {\n    const { comments } = this.state;\n    const { articleid, user } = this.props;\n\n    return (\n      <div className=\"commentsDiv\">\n        <AddComment\n          articleid={articleid}\n          getComment={this.getComment}\n          user={user}\n        />\n        <ul>\n          <div className=\"commentList\">\n            {comments.map(comment => (\n              <li key={comment.comment_id}>\n                <p>{comment.body}</p>\n                <p>published by: {comment.author}</p>\n                <p>left: {formatDate(comment.created_at)}</p>\n                <Voter\n                  votes={comment.votes}\n                  articleid={articleid}\n                  commentid={comment.comment_id}\n                  parent=\"comments\"\n                />\n                <button\n                  type=\"submit\"\n                  onClick={() =>\n                    this.handleDeleteComment(articleid, comment.comment_id)\n                  }\n                  disabled={user.username !== comment.author}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </div>\n        </ul>\n      </div>\n    );\n  }\n  componentDidMount = () => {\n    this._isMounted = true;\n    window.addEventListener('scroll', this.handleScroll);\n    this.handleFetchComments();\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    const pageUpdate = prevState.page !== this.state.page;\n    if (pageUpdate && !this.state.hasAllComments) {\n      this.handleFetchComments();\n    }\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleScroll = throttle(() => {\n    const distanceFromTop = window.scrollY;\n    const heightOfScreen = window.innerHeight;\n    const fullDocumentHeight = document.body.scrollHeight;\n\n    if (distanceFromTop + heightOfScreen > fullDocumentHeight - 100) {\n      this.setState(({ page }) => ({\n        page: page + 1\n      }));\n    }\n  }, 1000);\n\n  handleFetchComments = () => {\n    const { articleid } = this.props;\n    const { sort_by, page, limit } = this.state;\n    api\n      .fetchComments(articleid, sort_by, page, limit)\n      .then(newComments => {\n        this.setState(({ comments }) => ({\n          comments: page === 1 ? newComments : [...comments, ...newComments]\n        }));\n        if (!newComments.length)\n          this.setState({\n            hasAllComments: true\n          });\n      })\n      .catch(err => {\n        this.setState({\n          hasAllComments: true\n        });\n      });\n  };\n  getComment = comment => {\n    console.log(comment, 'comment is here');\n    this.setState(prevState => {\n      return { comments: [comment, ...prevState.comments] };\n    });\n  };\n\n  deleteComment = commentid => {\n    this.setState(prevState => ({\n      comments: prevState.comments.filter(\n        ({ comment_id }) => comment_id !== commentid\n      )\n    }));\n  };\n\n  handleDeleteComment = (articleid, commentid) => {\n    console.log('1');\n    api\n      .deleteData(articleid, commentid)\n      .then(res => {\n        this.deleteComment(commentid);\n      })\n      .catch(err => console.log(err));\n  };\n}\n\nexport default Comments;\n\n\n"]},"metadata":{},"sourceType":"module"}